{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","colr","document","getElementById","value","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","i","length","split","Alert","alert","word","lower","charAt","slice","cap","msg","defaultProps","aboutText","App","setMode","setAlert","messege","setTimeout","body","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAIe,SAASA,EAAOC,GAI3B,OACI,qBAAKC,UAAS,yCAAmD,YAAfD,EAAME,KAAqB,OAASF,EAAME,KAA9E,eAAyFF,EAAME,MAA7G,SACI,sBAAKD,UAAU,kBAAf,UAGI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAA5L,SACA,sBAAMT,UAAU,0BAEhB,sBAAKA,UAAU,2BAA2BU,GAAG,yBAA7C,UACI,qBAAIV,UAAU,kCAAd,UAEI,oBAAIA,UAAU,WAAd,SAEI,mBAAGA,UAAU,kBAAkBW,eAAa,OAAOT,KAAK,IAAxD,oBAGJ,oBAAIF,UAAU,gBAOlB,sBAAKA,UAAU,cAAf,UACA,uBAAOA,UAAU,oBAAoBI,KAAK,SAASM,GAAK,MAAME,YAAY,yBAAyBH,aAAW,WAC9G,wBAAQT,UAAS,0BAAqC,YAAfD,EAAME,KAAqB,OAAS,WAAaY,QA7BpF,WAChBd,EAAMe,KAAKC,SAASC,eAAe,OAAOC,QA4B9B,sBAIA,sBAAKjB,UAAS,sCAAgD,UAAfD,EAAME,KAAmB,OAAS,SAAjF,UACI,uBAAOD,UAAU,mBAAmBa,QAAWd,EAAMmB,WAAYd,KAAK,WAAWe,KAAK,SAAST,GAAG,2BAClG,uBAAOV,UAAU,mBAAmBoB,QAAQ,yBAA5C,yCCtCT,SAASC,EAAStB,GAC7B,IADoC,EAoCZuB,mBAAS,IApCG,mBAoC7BC,EApC6B,KAoCvBC,EApCuB,KAqCpC,OACI,qCACA,sBAAKxB,UAAY,YAAYyB,MAAS,CAACC,MAAsB,UAAf3B,EAAME,KAAmB,UAAY,SAAnF,UACI,6BAAKF,EAAM4B,UACX,qBAAK3B,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeiB,MAASM,EAAMK,SAVvC,SAACC,GAEpBL,EAAQK,EAAMC,OAAOb,QAQiEQ,MAAS,CAACM,gBAAgC,UAAfhC,EAAME,KAAmB,QAAU,OAAQyB,MAAsB,UAAf3B,EAAME,KAAmB,UAAY,SAAUS,GAAG,QAAQsB,KAAK,QAE9N,wBAAQhC,UAAY,uBAAuBa,QA3C7B,WAElB,IAAIoB,EAAUV,EAAKW,cACnBV,EAAQS,GACRlC,EAAMoC,UAAU,0BAA2B,YAuCvC,kCACA,wBAAQnC,UAAY,uBAAuBa,QAtC5B,WAEnB,IAAIoB,EAAUV,EAAKa,cACnBZ,EAAQS,GACRlC,EAAMoC,UAAU,0BAA2B,YAkCvC,kCACA,wBAAQnC,UAAY,uBAAuBa,QAjC5B,WAGnB,IADA,IAAIoB,EAAU,GACNI,EAAI,EAAGA,EAAId,EAAKe,OAAQD,IAAM,CAWlCJ,GATS,IAANI,GAGoB,MAAhBd,EAAKc,EAAI,GAFNd,EAAKc,GAAGH,cAKJX,EAAKc,GAKvBb,EAAQS,GACRlC,EAAMoC,UAAU,8BAA+B,YAgB3C,8CAEJ,sBAAKnC,UAAY,iBAAiByB,MAAS,CAACC,MAAsB,UAAf3B,EAAME,KAAmB,UAAY,SAAxF,UACI,sDACA,8BAAa,IAARsB,GAAuC,KAAzBA,EAAKA,EAAKe,OAAS,GAAYf,EAAKgB,MAAM,KAAKD,OAAS,EAAIf,EAAKgB,MAAM,KAAKD,OAA/F,cAAmHf,EAAKe,OAAxH,iBACA,8BAAI,KAAQf,EAAKgB,MAAM,KAAKD,OAA5B,mBACA,yCACA,4BAAIf,EAAKe,OAAS,EAAIf,EAAO,2CCrD1B,SAASiB,EAAMzC,GAK1B,OACIA,EAAM0C,OAAS,sBAAKzC,UAAS,sBAAiBD,EAAM0C,MAAMrC,KAA7B,gCAAiEe,KAAK,QAApF,UACX,mCANI,SAACuB,GACT,IAAMC,EAAQD,EAAKN,cACnB,OAAOO,EAAMC,OAAO,GAAGV,cAAgBS,EAAME,MAAM,GAItCC,CAAI/C,EAAM0C,MAAMrC,MAAzB,QADW,IACiCL,EAAM0C,MAAMM,OF2CpEjD,EAAOkD,aAAe,CAClB7C,MAAO,iBACP8C,UAAW,kBG6BAC,MAtEf,WAAgB,IAAD,EACW5B,mBAAS,SADpB,mBACNrB,EADM,KACAkD,EADA,OAEa7B,mBAAS,MAFtB,mBAENmB,EAFM,KAECW,EAFD,KAIPjB,EAAY,SAACkB,EAASjD,GAC1BgD,EAAS,CACPL,IAAKM,EACLjD,KAAMA,IAERkD,YAAW,WACTF,EAAS,QACR,OAmCL,OACE,qCAEE,cAACtD,EAAD,CAAQK,MAAQ,YAAY8C,UAAW,WAAWhD,KAAQA,EAAMiB,WAnCjD,WACL,UAATjB,GACDkD,EAAQ,QACRpC,SAASwC,KAAK9B,MAAMM,gBAAkB,UACtCI,EAAU,6BAA8B,WACxCpB,SAASZ,MAAQ,0BASjBgD,EAAQ,SACRpC,SAASwC,KAAK9B,MAAMM,gBAAkB,QACtCI,EAAU,8BAA+B,WACzCpB,SAASZ,MAAQ,2BAkByEW,KAdjF,SAACY,GACZ8B,QAAQC,IAAI/B,GACZyB,EAAQzB,GACRX,SAASZ,MAAQ,cAAeuB,EAAO,QAErCX,SAASwC,KAAK9B,MAAMM,gBADT,UAAVL,EACqC,QAEA,aAQtC,cAACc,EAAD,CAAOC,MAASA,IAChB,qBAAKzC,UAAY,iBAAjB,SAUM,cAACqB,EAAD,CAAUc,UAAaA,EAAWR,QAAU,mCAAmC1B,KAAQA,UC9DpFyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASC,eAAe,SAM1B0C,K","file":"static/js/main.d767284d.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    const changeColor = () => {\n        props.colr(document.getElementById(\"clr\").value);\n    }\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode === \"primary\" ? \"dark\" : props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                {/* title */}\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        {/* Home */}\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        {/* About */}\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\n                            {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a> */}\n                        </li>\n                    </ul>\n\n                    {/* Search Box */}\n                    <div className=\"d-flex mx-3\">\n                    <input className=\"form-control me-2\" type=\"search\" id = \"clr\" placeholder=\"light / dark / primary\" aria-label=\"Search\" />\n                    <button className= {`btn btn-outline-${props.mode === \"primary\" ? \"dark\" : \"primary\"}`} onClick = {changeColor} >Magic</button>\n                    </div>\n\n                    {/* Dark Mode Switch */}\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n                        <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {title: PropTypes.string.isRequired,\n                    aboutText: PropTypes.string.isRequired\n                }\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'Set about here'\n}","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n        // console.log(\"Uppercase was clicked\");\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Upper Case\", \"success\");\n    }\n    const handleLowClick = () => {\n        // console.log(\"Uppercase was clicked\");\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lower Case\", \"success\");\n    }\n    const handleCapFirst = () => {\n        // console.log(\"Uppercase was clicked\");\n        let newText = \"\";\n        for(let i = 0; i < text.length; i ++) {\n            let cur = \"\";\n            if(i === 0) {\n                cur = text[i].toUpperCase();\n            } else {\n                if(text[i - 1] === ' ') {\n                    cur = text[i].toUpperCase();\n                } else {\n                    cur = text[i];\n                }\n            }\n            newText = newText + cur;\n        }\n        setText(newText);\n        props.showAlert(\"First Letter is Capitalized\", \"success\");\n    }\n    const handleOnChange = (event) => {\n        // console.log(\"On Change\");\n        setText(event.target.value);\n    }\n    const [text, setText] = useState('');\n    return (\n        <>\n        <div className = \"container\" style = {{color: props.mode === 'light' ? '#042743' : 'white'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} style = {{backgroundColor: props.mode === 'light' ? 'white' : 'grey', color: props.mode === 'light' ? '#042743' : 'white'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button className = \"btn btn-primary mx-1\" onClick = {handleUpClick}>Convert to Uppercase</button>\n            <button className = \"btn btn-primary mx-2\" onClick = {handleLowClick}>Convert to Lowercase</button>\n            <button className = \"btn btn-primary mx-2\" onClick = {handleCapFirst}>Capitalize first of each word</button>\n        </div>\n        <div className = \"container my-3\" style = {{color: props.mode === 'light' ? '#042743' : 'white'}}>\n            <h2>Your Text Summary !!</h2>\n            <p>{(text == '' || text[text.length - 1] == ' ' ? text.split(\" \").length - 1 : text.split(\" \").length)} words and {text.length} characters</p>\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length > 0 ? text : \"Enter some text in above textbox\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const cap = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{cap(props.alert.type)}: </strong> {props.alert.msg}\n        </div>\n    )\n}\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (messege, type) => {\n    setAlert({\n      msg: messege,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // Title chamkane wala kaam\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now !!';\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  const colr = (color) => {\n    console.log(color);\n    setMode(color);\n    document.title = 'TextUtils -'+ color +' Mode';\n    if(color === 'light') {\n      document.body.style.backgroundColor = 'white';\n    } else {\n      document.body.style.backgroundColor = '#042743';\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title = \"TextUtils\" aboutText =\"About Us\" mode = {mode} toggleMode = {toggleMode} colr = {colr}/>\n      <Alert alert = {alert} />\n      <div className = \"container my-3\">\n        {/* <Switch> */}\n          {/* exact use na kro to partial matching hogi like :\n          /users --> component 1\n          /users/home --> component 2\n          agar mein exact na use kru toh 2nd path bhi path 1 ko refer krega */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert = {showAlert} heading = \"Enter your text to analyze below\" mode = {mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}